package com.harika.moviemicroservice;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;

import com.harika.moviemicroservice.model.Ticket;
import com.harika.moviemicroservice.repository.TicketRepo;
import com.harika.moviemicroservice.service.TicketServiceImpl;

@AutoConfigureMockMvc
@SpringBootTest
public class TicketServiceTest {
	
	
	@Mock
	private TicketRepo ticketRepo;
	
	@InjectMocks
	private TicketServiceImpl ticketService;
	
	@BeforeEach
	public void init()
	{
		MockitoAnnotations.openMocks(this);
		MockMvcBuilders.standaloneSetup(ticketService).build();
	}

	List<Ticket> ticketList = new ArrayList<Ticket>();
	
	@Test
	public void getAllTicketSuccess() throws Exception
	{
		Ticket ticket = new Ticket();
		ticket.setMovie_id_fk(130);
		ticket.setMovieName("Amigos");
		ticket.setTheatreName("ABC-Cinemas");
		ticket.setNumberOfSeats(5);
		ticket.setTicketId(100);
		ticket.setTotalSeats(200);
		ticket.setAvailableSeats(200);
		ticket.setSeatNumber("A-J");
		
		ticketList.add(ticket);
		when(ticketRepo.findAll()).thenReturn(ticketList);
		
		List<Ticket> tList = ticketService.getAllTickets(130);
		
		assertEquals(ticketList, tList);
		
		
	}
	
//	@Test
//	public void getAllTicketsFailures() throws Exception
//	{
//		when(ticketRepo.findAll()).thenReturn(null);
//		
//		List<Ticket> tList = ticketService.getAllTickets(130);
//		//System.out.println(tList);
//		assertNull(tList);
//		
//	}
	


}
